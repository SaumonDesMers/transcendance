// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
	id Int	@id @default(autoincrement())
	username String
	password String
	email String
	chatUser ChatUser?
}

model ChatUser {
	id Int @id @default(autoincrement())
	user User @relation(fields: [userId], references: [id])
	messages Message[]
	userId Int @unique
	joinedChannels Channel[]


	// adminChannels Channel[] @ignore //this is here to implement the one to many relation regarding admins of channel
									// <<one user can be the admin of many channels>>
}

model Message {
	id Int @id @default(autoincrement())
	content String
	author ChatUser? @relation(fields: [chatUserId], references: [id])
	channel Channel @relation(fields: [channelId], references: [id])
	chatUserId Int
	channelId Int
}

// The objective for channels is to have some kind of hierarchy
// with base being Channel and two derived version being TextChannel and DMChannel
//so the black magic used here is in this noble objective please forgive me



model Channel {
	id Int @id @default(autoincrement())
	users ChatUser[]
	messages Message[]

	dmChannel DMChannel?
	textChannel TextChannel?

}

model DMChannel {
	channel Channel @relation(fields: [channelId], references: [id])
	channelId Int @unique
}

model TextChannel {
	channel Channel @relation(fields: [channelId], references: [id])
	channelId Int @unique

}
